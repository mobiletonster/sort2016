
--------------------------Add to Startup.cs, ConfigureServices()------------------------------
services.AddSwaggerGen();

--------------------------Add to Startup.cs, Configure()--------------------------------------
            
// Enable middleware to serve generated Swagger as a JSON endpoint
app.UseSwagger();

// Enable middleware to serve swagger-ui assets (HTML, JS, CSS etc.)
app.UseSwaggerUi();

-------------------------Add tools to tools section for EF Reverse engineer support -------------

 Install-Package Microsoft.EntityFrameworkCore.SqlServer
 Install-Package Microsoft.EntityFrameworkCore.SqlServer.Design
 Install-Package Microsoft.EntityFrameworkCore.Tools -pre

Open project.json
Locate the tools section and add the highlighted lines as shown below

  "tools": {
    "Microsoft.EntityFrameworkCore.Tools": "1.0.0-preview2-final"
  },

------------------------ Run Scaffold Command -----------------------------
Scaffold-DbContext "Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\Users\spencerto\Source\Repos\sort2016\LDSGems.Web\src\LDSGems.Web\App_Data\glfeed.mdf;Integrated Security=True;Connect Timeout=30" 
Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models -Context LDSGemsContext

------------------------- Modify the Context in the LDSGemsContext.cs file --------------------
add the constructor:

public LDSGemsContext(DbContextOptions<LDSGemsContext> options)
    : base(options)
{ }

// comment out the lines in the OnConfiguring section.

------------------------- Modify the Startup.cs file ---------------------------
add to ConfigureServices()

var connection = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\Users\spencerto\Source\Repos\sort2016\LDSGems.Web\src\LDSGems.Web\App_Data\glfeed.mdf;Integrated Security=True;Connect Timeout=30";
services.AddDbContext<LDSGemsContext>(options => options.UseSqlServer(connection));

------------------------- Modify the ValuesController.cs file -----------------------
private LDSGemsContext _context;

public ValuesController(LDSGemsContext context)
{
    _context = context;
}

default GET:
    return _context.DailyGems.ToList();

annotations:
	[ProducesResponseType(typeof(List<DailyGems>), 200)]

------------------------- 

